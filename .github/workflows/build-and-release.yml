name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.0.6'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
        
    - name: Install Linux dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev libblkid-dev liblzma-dev libsecret-1-dev
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Build Linux
      run: flutter build linux --release
      
    - name: Create Linux package
      run: |
        VERSION="${GITHUB_REF#refs/tags/v}"
        if [ -z "$VERSION" ] || [ "$VERSION" = "$GITHUB_REF" ]; then
          VERSION="${{ github.event.inputs.version }}"
        fi
        mkdir -p releases/v$VERSION
        rm -rf releases/v$VERSION/yall-$VERSION-linux-x64
        cp -r build/linux/x64/release/bundle releases/v$VERSION/yall-$VERSION-linux-x64
        # Copy additional files to the Linux package
        cp README.md releases/v$VERSION/yall-$VERSION-linux-x64/ || true
        cp LICENSE releases/v$VERSION/yall-$VERSION-linux-x64/ || true
        cp install-linux.sh releases/v$VERSION/yall-$VERSION-linux-x64/ || true
        cp linux/yall.desktop releases/v$VERSION/yall-$VERSION-linux-x64/ || true
        cd releases/v$VERSION
        tar -czf yall-$VERSION-linux-x64.tar.gz yall-$VERSION-linux-x64
        
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-package
        path: releases/v*/yall-*-linux-x64.tar.gz

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Build Windows
      run: flutter build windows --release
      
    - name: Create Windows package
      run: |
        $VERSION = "${{ github.ref }}" -replace "refs/tags/v", ""
        if (-not $VERSION -or $VERSION -eq "${{ github.ref }}") {
          $VERSION = "${{ github.event.inputs.version }}"
        }
        $RELEASE_DIR = "releases\v$VERSION"
        $RELEASE_NAME = "yall-$VERSION-windows-x64"
        New-Item -ItemType Directory -Force -Path $RELEASE_DIR
        Remove-Item -Path "$RELEASE_DIR\$RELEASE_NAME" -Recurse -Force -ErrorAction SilentlyContinue
        Copy-Item -Recurse "build\windows\x64\runner\Release\" "$RELEASE_DIR\$RELEASE_NAME\"
        Copy-Item "README.md" "$RELEASE_DIR\$RELEASE_NAME\" -ErrorAction SilentlyContinue
        Copy-Item "LICENSE" "$RELEASE_DIR\$RELEASE_NAME\" -ErrorAction SilentlyContinue
        Copy-Item "install-windows.bat" "$RELEASE_DIR\$RELEASE_NAME\" -ErrorAction SilentlyContinue
        Compress-Archive -Path "$RELEASE_DIR\$RELEASE_NAME" -DestinationPath "$RELEASE_DIR\$RELEASE_NAME.zip"
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-package
        path: releases/v*/yall-*-windows-x64.zip

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-package
        path: ./artifacts/
        
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-package
        path: ./artifacts/
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/*.tar.gz
          artifacts/*.zip
        name: "Yall ${{ github.ref_name }}: Cross-Platform Release"
        body: |
          ## üöÄ Yall ${{ github.ref_name }} - Cross-Platform Release
          
          This release includes packages for both Linux and Windows platforms.
          
          ### üì¶ Downloads:
          - **Linux**: `yall-${{ github.ref_name }}-linux-x64.tar.gz`
          - **Windows**: `yall-${{ github.ref_name }}-windows-x64.zip`
          
          ### üêß Linux Installation:
          ```bash
          # Extract the package
          tar -xzf yall-${{ github.ref_name }}-linux-x64.tar.gz
          cd yall-${{ github.ref_name }}-linux-x64
          
          # Install (run from the extracted directory)
          chmod +x install-linux.sh
          ./install-linux.sh
          ```
          
          ### ü™ü Windows Installation:
          1. Download and extract `yall-${{ github.ref_name }}-windows-x64.zip`
          2. Run `install-windows.bat` for automatic installation
          3. Or run `yall.exe` directly for portable usage
          
          ### ‚ú® Features:
          - Default window size: 760x575 pixels (optimized for desktop)
          - Enhanced Nostr support with remote signers and NIP-46 bunker
          - Fixed OAuth dialog behavior for Mastodon
          - Improved UI overflow handling
          - Cross-platform compatibility
          
          ---
          
          **Platform Support:**
          - ‚úÖ Mastodon (OAuth)
          - ‚úÖ Nostr (Local keys, remote signers, NIP-46 bunker)  
          - ‚úÖ Bluesky (App passwords)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
