// Mocks generated by Mockito 5.4.6 from annotations
// in yall/test/integration/account_settings_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:yall/models/account.dart' as _i8;
import 'package:yall/models/platform_type.dart' as _i6;
import 'package:yall/models/post_result.dart' as _i2;
import 'package:yall/services/secure_storage_service.dart'
    as _i3;
import 'package:yall/services/social_platform_service.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostResult_0 extends _i1.SmartFake implements _i2.PostResult {
  _FakePostResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i3.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> storeAccountCredentials(
    String? accountId,
    Map<String, dynamic>? credentials,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#storeAccountCredentials, [
              accountId,
              credentials,
            ]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getAccountCredentials(String? accountId) =>
      (super.noSuchMethod(
            Invocation.method(#getAccountCredentials, [accountId]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<void> deleteAccountCredentials(String? accountId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccountCredentials, [accountId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> storeSetting(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#storeSetting, [key, value]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getSetting(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getSetting, [key]),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> deleteSetting(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSetting, [key]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> storeAccountData(
    String? accountId,
    Map<String, dynamic>? accountData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#storeAccountData, [accountId, accountData]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getAccountData(String? accountId) =>
      (super.noSuchMethod(
            Invocation.method(#getAccountData, [accountId]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<void> deleteAccountData(String? accountId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccountData, [accountId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<String>> getAllAccountIds() =>
      (super.noSuchMethod(
            Invocation.method(#getAllAccountIds, []),
            returnValue: _i4.Future<List<String>>.value(<String>[]),
          )
          as _i4.Future<List<String>>);

  @override
  _i4.Future<void> deleteAllAccountData(String? accountId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAllAccountData, [accountId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> isAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isAvailable, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [SocialPlatformService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocialPlatformService extends _i1.Mock
    implements _i5.SocialPlatformService {
  MockSocialPlatformService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.PlatformType get platformType =>
      (super.noSuchMethod(
            Invocation.getter(#platformType),
            returnValue: _i6.PlatformType.mastodon,
          )
          as _i6.PlatformType);

  @override
  String get platformName =>
      (super.noSuchMethod(
            Invocation.getter(#platformName),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.getter(#platformName),
            ),
          )
          as String);

  @override
  int get characterLimit =>
      (super.noSuchMethod(Invocation.getter(#characterLimit), returnValue: 0)
          as int);

  @override
  List<String> get requiredCredentialFields =>
      (super.noSuchMethod(
            Invocation.getter(#requiredCredentialFields),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i4.Future<bool> authenticate(_i8.Account? account) =>
      (super.noSuchMethod(
            Invocation.method(#authenticate, [account]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i2.PostResult> publishPost(
    String? content,
    _i8.Account? account,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#publishPost, [content, account]),
            returnValue: _i4.Future<_i2.PostResult>.value(
              _FakePostResult_0(
                this,
                Invocation.method(#publishPost, [content, account]),
              ),
            ),
          )
          as _i4.Future<_i2.PostResult>);

  @override
  _i4.Future<bool> validateConnection(_i8.Account? account) =>
      (super.noSuchMethod(
            Invocation.method(#validateConnection, [account]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  bool isContentValid(String? content) =>
      (super.noSuchMethod(
            Invocation.method(#isContentValid, [content]),
            returnValue: false,
          )
          as bool);

  @override
  int getRemainingCharacters(String? content) =>
      (super.noSuchMethod(
            Invocation.method(#getRemainingCharacters, [content]),
            returnValue: 0,
          )
          as int);

  @override
  _i2.PostResult createSuccessResult(String? content) =>
      (super.noSuchMethod(
            Invocation.method(#createSuccessResult, [content]),
            returnValue: _FakePostResult_0(
              this,
              Invocation.method(#createSuccessResult, [content]),
            ),
          )
          as _i2.PostResult);

  @override
  _i2.PostResult createFailureResult(
    String? content,
    String? errorMessage,
    _i2.PostErrorType? errorType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createFailureResult, [
              content,
              errorMessage,
              errorType,
            ]),
            returnValue: _FakePostResult_0(
              this,
              Invocation.method(#createFailureResult, [
                content,
                errorMessage,
                errorType,
              ]),
            ),
          )
          as _i2.PostResult);

  @override
  _i2.PostResult handleError(
    String? content,
    dynamic error, {
    _i2.PostErrorType? defaultErrorType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #handleError,
              [content, error],
              {#defaultErrorType: defaultErrorType},
            ),
            returnValue: _FakePostResult_0(
              this,
              Invocation.method(
                #handleError,
                [content, error],
                {#defaultErrorType: defaultErrorType},
              ),
            ),
          )
          as _i2.PostResult);

  @override
  bool validateCredentials(_i8.Account? account) =>
      (super.noSuchMethod(
            Invocation.method(#validateCredentials, [account]),
            returnValue: false,
          )
          as bool);

  @override
  bool hasRequiredCredentials(_i8.Account? account) =>
      (super.noSuchMethod(
            Invocation.method(#hasRequiredCredentials, [account]),
            returnValue: false,
          )
          as bool);
}
